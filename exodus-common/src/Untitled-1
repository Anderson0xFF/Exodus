
    /// Get GPU data.
    /// 
    /// Post: `ProtocolGPUData`
    /// 
    /// ### Arguments
    /// 
    /// * `id` - Integer of 32 bits, the id of gpu.
    /// 
    /// ### Returns
    /// 
    /// * `id` - Integer of 32 bits, the gpu id.
    /// 
    /// * `vendor` - Integer of 32 bits, the gpu vendor.
    /// 
    /// * `screen_count` - Integer of 32 bits, the screen count.
    /// 
    /// * `screens` - Array of integer of 32 bits, the screens ids.
    ProtocolGPUData,

    /// Get screen data.
    /// 
    /// Post: `ProtocolScreenData`
    /// 
    /// ### Arguments
    /// 
    /// * `gpu` - Integer of 32 bits, the id of gpu.
    /// 
    /// * `screen` - Integer of 32 bits, the id of screen.
    /// 
    /// ### Returns
    /// 
    /// * `id` - Usigned integer of 32 bits, the screen id.
    /// 
    /// * `connector_type` - Usigned integer of 32 bits, the connector type.
    /// 
    /// * `mm_width` - Integer of 32 bits, the width in millimeters.
    /// 
    /// * `mm_height` - Integer of 32 bits, the height in millimeters.
    /// 
    /// * `subpixel` - Integer of 32 bits, the subpixel.
    /// 
    /// * `mode` - Integer of 32 bits, the mode id.
    /// 
    /// * `modes_count` - Integer of 32 bits, the modes count.
    /// 
    /// * `modes` - Array of integer of 32 bits, the modes ids.
    ProtocolScreenData,

    /// Get screen mode data.
    /// 
    /// Post: `ProtocolScreenModeData`
    /// 
    /// ### Arguments
    /// 
    /// * `screen` - Integer of 32 bits, the id of screen.
    /// 
    /// ### Returns
    ///    * `clock` - Integer of 32 bits, the clock.
    ///    * `hdisplay` - Integer of 16 bits, the horizontal display.
    ///    * `hsync_start` - Integer of 16 bits, the horizontal sync start.
    ///    * `hsync_end` - Integer of 16 bits, the horizontal sync end.
    ///    * `htotal` - Integer of 16 bits, the horizontal total.
    ///    * `hskew` - Integer of 16 bits, the horizontal skew.
    ///    * `vdisplay` - Integer of 16 bits, the vertical display.
    ///    * `vsync_start` - Integer of 16 bits, the vertical sync start.
    ///    * `vsync_end` - Integer of 16 bits, the vertical sync end.
    ///    * `vtotal` - Integer of 16 bits, the vertical total.
    ///    * `vscan` - Integer of 16 bits, the vertical scan.
    ///    * `vrefresh` - Integer of 32 bits, the vertical refresh.
    ///    * `flags` - Integer of 32 bits, the flags.
    ///    * `type` - Integer of 32 bits, the type.
    ///    * `name` - Array of 32 bytes, the name.
    ProtocolScreenModeData,

    /// Drawing pixels in screen.
    /// 
    /// Post: `ProtocolGPURendering`
    /// 
    /// ### Arguments
    /// 
    /// * `gpu` - Integer of 32 bits, the gpu id.
    /// 
    /// * `screen` - Integer of 32 bits, the id of screen.
    /// 
    /// * `plane` - Integer of 32 bits, the plane id.
    ///     * Background    = 1
    ///     * Foreground    = 2
    ///     * Overlay       = 3
    ///     * Cursor        = 4
    /// 
    /// * `x` - Integer of 32 bits, the x position.
    /// 
    /// * `y` - Integer of 32 bits, the y position.
    /// 
    /// * `width` - Integer of 32 bits, the width.
    /// 
    /// * `height` - Integer of 32 bits, the height.
    /// 
    /// * `subpixel` - Integer of 32 bits, the subpixel.
    ///     * Unknown           = 1
    ///     * HorizontalRGB     = 2
    ///     * HorizontalBGR     = 3
    ///     * VerticalRGB       = 4
    ///     * VerticalBGR       = 5
    ///     * None              = 6
    /// 
    /// * `pixels` - Array of integer of 32 bits, the pixels.
    /// 
    /// ### Returns
    /// 
    /// No returns.
    /// 
    /// ### Example
    ProtocolGPURendering,